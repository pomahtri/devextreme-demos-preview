/**
 * DevExtreme (esm/exporter/jspdf/pdf_grid.js)
 * Version: 21.1.2 (build 21124-0324)
 * Build date: Tue May 04 2021
 *
 * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
import {
    isDefined
} from "../../core/utils/type";
import {
    PdfTable
} from "./pdf_table";
export class PdfGrid {
    constructor(splitByColumns, columnWidths) {
        this._splitByColumns = null !== splitByColumns && void 0 !== splitByColumns ? splitByColumns : [];
        this._columnWidths = null !== columnWidths && void 0 !== columnWidths ? columnWidths : [];
        this._newPageTables = [];
        this._tables = [];
        this._currentHorizontalTables = null
    }
    _addLastTableToNewPages() {
        this._newPageTables.push(this._currentHorizontalTables[this._currentHorizontalTables.length - 1])
    }
    startNewTable(drawTableBorder, firstTableRect, firstTableOnNewPage, splitByColumns) {
        var _this$_splitByColumns, _this$_splitByColumns2;
        if (isDefined(splitByColumns)) {
            this._splitByColumns = splitByColumns
        }
        var firstTableEndColumnIndex = null !== (_this$_splitByColumns = null === (_this$_splitByColumns2 = this._splitByColumns[0]) || void 0 === _this$_splitByColumns2 ? void 0 : _this$_splitByColumns2.columnIndex) && void 0 !== _this$_splitByColumns ? _this$_splitByColumns : this._columnWidths.length;
        this._currentHorizontalTables = [new PdfTable(drawTableBorder, firstTableRect, this._columnWidths.slice(0, firstTableEndColumnIndex))];
        if (firstTableOnNewPage) {
            this._addLastTableToNewPages()
        }
        if (isDefined(this._splitByColumns)) {
            for (var i = 0; i < this._splitByColumns.length; i++) {
                var _this$_splitByColumns3, _this$_splitByColumns4;
                var beginColumnIndex = this._splitByColumns[i].columnIndex;
                var endColumnIndex = null !== (_this$_splitByColumns3 = null === (_this$_splitByColumns4 = this._splitByColumns[i + 1]) || void 0 === _this$_splitByColumns4 ? void 0 : _this$_splitByColumns4.columnIndex) && void 0 !== _this$_splitByColumns3 ? _this$_splitByColumns3 : this._columnWidths.length;
                this._currentHorizontalTables.push(new PdfTable(drawTableBorder, this._splitByColumns[i].tableRect, this._columnWidths.slice(beginColumnIndex, endColumnIndex)));
                if (this._splitByColumns[i].drawOnNewPage) {
                    this._addLastTableToNewPages()
                }
            }
        }
        this._tables.push(...this._currentHorizontalTables)
    }
    addRow(cells, rowHeight) {
        var _this = this;
        var currentTableIndex = 0;
        var currentTableCells = [];
        var _loop = function(cellIndex) {
            var isNewTableColumn = _this._splitByColumns.filter(splitByColumn => splitByColumn.columnIndex === cellIndex)[0];
            if (isNewTableColumn) {
                _this._currentHorizontalTables[currentTableIndex].addRow(currentTableCells, rowHeight);
                currentTableIndex++;
                currentTableCells = []
            }
            currentTableCells.push(cells[cellIndex])
        };
        for (var cellIndex = 0; cellIndex < cells.length; cellIndex++) {
            _loop(cellIndex)
        }
        this._currentHorizontalTables[currentTableIndex].addRow(currentTableCells, rowHeight)
    }
    drawTo(doc) {
        this._tables.forEach(table => {
            if (-1 !== this._newPageTables.indexOf(table)) {
                doc.addPage()
            }
            table.drawTo(doc)
        })
    }
}
